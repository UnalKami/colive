user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        server_name localhost;

        # Reverse proxy al backend Java
        location /api/ {
            proxy_pass http://java_backend:8080/;  # nombre del contenedor o servicio en docker-compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Reverse proxy al frontend React
        location / {
            proxy_pass http://frontend:80/;  # nombre del contenedor con nginx que sirve React
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            try_files $uri $uri/ =404;
        }

        # (Opcional) ruta para otro microservicio
        location /notificaciones/ {
            proxy_pass http://notificaciones:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
