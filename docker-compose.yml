services:
  CL_Auth_ms:
    image: openjdk:24-slim-bookworm
    container_name: CL_Auth_ms
    hostname: cl-auth-ms
    build:
      context: ./auth-java-component  
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://CL_auth_db:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=cincopatodos
    ports:
      - "8080:8080"
    depends_on:
      - CL_auth_db

  CL_auth_db:
    container_name: CL_auth_db
    ports:
      - 5432:5432
    image: postgres:16.9-alpine3.21 
    restart: unless-stopped
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cincopatodos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - cl_auth_db_data:/var/lib/postgresql/data

  CL_residence_db:
    image: mongo:8.0.9-noble
    container_name: CL_residence_db
    ports:
      - "27017:27017" 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=cincopatodos
      - MONGO_INITDB_DATABASE=residence_db
    volumes:
      - cl_residence_db_data:/data/db

  CL_residence_ms:
    image: node:23.11.1-alpine3.21
    container_name: CL_residence-ms
    build:
      context: ./ResidenceCreator-ms  
    ports:
      - "3001:3001"
    depends_on:
      - CL_residence_db
    env_file:
      - ./ResidenceCreator-ms/.env

  CL_messaging-ms:
    image: cl_messaging_ms:latest
    build:
      context: ./MensajeriaYnotificaciones
      dockerfile: Dockerfile.sbt-alpine
    container_name: CL_messaging-ms
    ports:
      - "9000:9000"
    environment:
      SMTP_SECRET_KEY: "claveaes12345678" # Clave AES de 16 bytes
      MONGO_URI: "mongodb://root:cincopatodos@CL_residence_db:27017/correos?authSource=admin"
    command: ["sbt", "run"]
    depends_on:
      - CL_residence_db
      - CL_auth_db
    restart: unless-stopped

  CL_web_fe:
    image: cl_web_fe:latest
    build: 
      context: ./CL_web_fe      
    container_name: CL_web_fe
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    restart: unless-stopped

  CL_ag:
    image: cl_ag:latest
    build:
      context: ./CL_ag
    container_name: CL_ag
    ports:
      - "8000:8000"

  stadistics:
    build: ./stadistics
    container_name: stadistics
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./stadistics:/app
    ports:
      - "8010:8000"
    env_file:
      - ./stadistics/.env
    depends_on:
      - CL_auth_db
      - CL_residence_db
      - CL_ag
      - CL_web_fe
      - CL_messaging-ms
      - CL_residence-ms
      - CL_auth_db
      - CL_residence_db

volumes:
  cl_auth_db_data:
  cl_residence_db_data:
    
  #CL_inverse_proxy:
  #  image: nginx:1.28.0-alpine-perl
  #  container_name: CL_ag0
  #  ports:
  #      - "80:80"
  #      - "443:443"
  #  volumes:
  #    - ./NetworkManager/nginx:/etc/nginx
  #    -  ./frontend:/usr/share/nginx/html
  #  depends_on:
  #    - CL_Auth_ms
  #    - CL_residence_ms