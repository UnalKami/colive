services:
  network-manager:
    image: nginx:1.28.0-alpine-perl
    container_name: nginx
    ports:
        - "80:80"
        - "443:443"
    volumes:
      - ./NetworkManager/nginx.conf:/etc/nginx/nginx.conf
      - ./NetworkManager/nginx/certs:/etc/nginx/certs
      - ./NetworkManager/nginx/conf.d:/etc/nginx/conf.d
      -  ./frontend/react-app/build/html:/usr/share/nginx/html

  springboot-app:
    image: openjdk:24-slim-bookworm
    container_name: SpringBoot-Auth-ms
    build:
      context: ./auth-java-component  
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=cincopatodos
    ports:
      - "8080:8080"
  db:
    container_name: PostgreSQL-db
    ports:
      - 5432:5432
    image: postgres:16.9-alpine3.21 
    restart: unless-stopped
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cincopatodos
    volumes:
      - ./dbPostgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:8.0.9-noble
    container_name: mongo_db
    ports:
      - "27017:27017" 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=cincopatodos
      - MONGO_INITDB_DATABASE=residence_db

  residence-creator-ms:
    image: node:23.11.1-alpine3.21
    container_name: ResidenceCreator-ms
    build:
      context: ./ResidenceCreator-ms  
    environment:
      - MONGO_URI=mongodb://root:cincopatodos@mongo_db:27017/residence_db?authSource=admin
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    env_file:
      - ./ResidenceCreator-ms/.env